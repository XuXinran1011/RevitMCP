name: RevitMCP CI/CD

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main, dev ]

env:
  # 仅供CI测试用，实际用户需用本地Revit DLL
  SERVER_EXE_PATH: ${{ github.workspace }}/RevitMCP.Server/bin/Release/net9.0/RevitMCP.Server.exe

jobs:
  build-and-test:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: [ '8.0.x', '9.0.x' ]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: 恢复依赖
        run: dotnet restore

      - name: 构建所有项目
        run: dotnet build --no-restore --configuration Release

      - name: 运行端到端集成测试
        run: dotnet test RevitMCP.IntegrationTests --no-build --configuration Release --logger trx
        env:
          SERVER_EXE_PATH: ${{ env.SERVER_EXE_PATH }}

      - name: 上传测试报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults-${{ matrix.dotnet-version }}
          path: '**/TestResults/*.trx'

  package:
    runs-on: windows-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: 发布Plugin
        run: dotnet publish RevitMCP.Plugin/RevitMCP.Plugin.csproj -c Release -o publish/Plugin
      - name: 发布Server
        run: dotnet publish RevitMCP.Server/RevitMCP.Server.csproj -c Release -f net9.0 -o publish/Server
      - name: 上传发布包
        uses: actions/upload-artifact@v4
        with:
          name: Publish
          path: publish/

  release:
    runs-on: windows-latest
    needs: package
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: 下载发布包
        uses: actions/download-artifact@v4
        with:
          name: Publish
          path: publish/
      - name: 创建GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            自动发布：${{ github.ref_name }}
            - 包含Plugin和Server发布包
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 上传发布包到Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            publish/Plugin/**
            publish/Server/**

  nuget:
    runs-on: windows-latest
    needs: package
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: 打包NuGet包
        run: dotnet pack RevitMCP.Shared/RevitMCP.Shared.csproj -c Release -o nupkg
      - name: 发布到NuGet.org
        run: dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}